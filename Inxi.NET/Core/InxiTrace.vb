
'    Inxi.NET  Copyright (C) 2020-2021  EoflaOE
'
'    This file is part of Inxi.NET
'
'    Inxi.NET is free software: you can redistribute it and/or modify
'    it under the terms of the GNU General Public License as published by
'    the Free Software Foundation, either version 3 of the License, or
'    (at your option) any later version.
'
'    Inxi.NET is distributed in the hope that it will be useful,
'    but WITHOUT ANY WARRANTY; without even the implied warranty of
'    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
'    GNU General Public License for more details.
'
'    You should have received a copy of the GNU General Public License
'    along with this program.  If not, see <https://www.gnu.org/licenses/>.

Imports System.IO
Imports Extensification.StringExts

Public Module InxiTrace

    ''' <summary>
    ''' Indicates whether the debug data is received or not. It can be used to write debug data to debugger.
    ''' </summary>
    ''' <param name="Message">A message</param>
    Public Event DebugDataReceived(Message As String, PlainMessage As String)
    ''' <summary>
    ''' Event when specific hardware was parsed
    ''' </summary>
    ''' <param name="Hardware">Specific hardware type parsed</param>
    Public Event HardwareParsed(Hardware As InxiHardwareType)

    ''' <summary>
    ''' Write a debug message
    ''' </summary>
    ''' <param name="Message">A message</param>
    Friend Sub Debug(Message As String)
        'Get trace information
        Dim STrace As New StackTrace(True)
        Dim Source As String = Path.GetFileName(STrace.GetFrame(1).GetFileName)
        Dim LineNum As String = STrace.GetFrame(1).GetFileLineNumber
        Dim Func As String = STrace.GetFrame(1).GetMethod.Name

        'Apparently, GetFileName on Mono in Linux doesn't work for MDB files made using pdb2mdb for PDB files that are generated by Visual Studio, so we take the last entry for the backslash to get the source file name.
        If IsUnix() Then
            If Not String.IsNullOrEmpty(Source) Then
                Source = Source.Split("\")(Source.Split("\").Length - 1)
            End If
        End If

        If Source IsNot Nothing And Not LineNum = 0 Then
            RaiseEvent DebugDataReceived($"({Func} - {Source}:{LineNum}) {Message}", Message)
        Else
            RaiseEvent DebugDataReceived(Message, Message)
        End If
    End Sub

    ''' <summary>
    ''' Write a debug message
    ''' </summary>
    ''' <param name="Message">A message</param>
    Friend Sub Debug(Message As String, ParamArray Values() As Object)
        'Get trace information
        Dim STrace As New StackTrace(True)
        Dim Source As String = Path.GetFileName(STrace.GetFrame(1).GetFileName)
        Dim LineNum As String = STrace.GetFrame(1).GetFileLineNumber
        Dim Func As String = STrace.GetFrame(1).GetMethod.Name

        'Apparently, GetFileName on Mono in Linux doesn't work for MDB files made using pdb2mdb for PDB files that are generated by Visual Studio, so we take the last entry for the backslash to get the source file name.
        If IsUnix() Then
            If Not String.IsNullOrEmpty(Source) Then
                Source = Source.Split("\")(Source.Split("\").Length - 1)
            End If
        End If

        If Source IsNot Nothing And Not LineNum = 0 Then
            RaiseEvent DebugDataReceived($"({Func} - {Source}:{LineNum}) {Message.FormatString(Values)}", Message.FormatString(Values))
        Else
            RaiseEvent DebugDataReceived(Message.FormatString(Values), Message.FormatString(Values))
        End If
    End Sub

    ''' <summary>
    ''' Raises the HardwareParsed event
    ''' </summary>
    ''' <param name="Hardware">Parsed hardware type</param>
    Friend Sub RaiseParsedEvent(Hardware As InxiHardwareType)
        Debug("Hardware type {0} parsed.", Hardware)
        RaiseEvent HardwareParsed(Hardware)
    End Sub

End Module