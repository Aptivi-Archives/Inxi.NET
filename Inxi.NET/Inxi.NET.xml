<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Inxi.NET</name>
    </assembly>
    <members>
        <member name="T:InxiFrontend.HardwareBase">
            <summary>
            Hardware base
            </summary>
        </member>
        <member name="P:InxiFrontend.HardwareBase.Name">
            <summary>
            The hardware name
            </summary>
        </member>
        <member name="M:InxiFrontend.HardwareParserBase.ParseLinux(Newtonsoft.Json.Linq.JToken)">
            <summary>
            The base Linux hardware parser
            </summary>
        </member>
        <member name="M:InxiFrontend.HardwareParserBase.ParseMacOS(Claunia.PropertyList.NSArray)">
            <summary>
            The base macOS hardware parser
            </summary>
        </member>
        <member name="M:InxiFrontend.HardwareParserBase.ParseWindows(System.Management.ManagementObjectSearcher)">
            <summary>
            The base Windows hardware parser
            </summary>
        </member>
        <member name="M:InxiFrontend.HardwareParserBase.ParseAllLinux(Newtonsoft.Json.Linq.JToken)">
            <summary>
            The base Linux hardware parser
            </summary>
        </member>
        <member name="M:InxiFrontend.HardwareParserBase.ParseAllMacOS(Claunia.PropertyList.NSArray)">
            <summary>
            The base macOS hardware parser
            </summary>
        </member>
        <member name="M:InxiFrontend.HardwareParserBase.ParseAllWindows(System.Management.ManagementObjectSearcher)">
            <summary>
            The base Windows hardware parser
            </summary>
        </member>
        <member name="M:InxiFrontend.HardwareParserBase.ParseAllToListLinux(Newtonsoft.Json.Linq.JToken)">
            <summary>
            The base Linux hardware parser
            </summary>
        </member>
        <member name="M:InxiFrontend.HardwareParserBase.ParseAllToListMacOS(Claunia.PropertyList.NSArray)">
            <summary>
            The base macOS hardware parser
            </summary>
        </member>
        <member name="M:InxiFrontend.HardwareParserBase.ParseAllToListWindows(System.Management.ManagementObjectSearcher)">
            <summary>
            The base Windows hardware parser
            </summary>
        </member>
        <member name="M:InxiFrontend.IHardwareParser.Parse(Newtonsoft.Json.Linq.JToken,Claunia.PropertyList.NSArray)">
            <summary>
            The base hardware parser
            </summary>
        </member>
        <member name="M:InxiFrontend.IHardwareParser.ParseAll(Newtonsoft.Json.Linq.JToken,Claunia.PropertyList.NSArray)">
            <summary>
            The base hardware parser
            </summary>
        </member>
        <member name="M:InxiFrontend.IHardwareParser.ParseAllToList(Newtonsoft.Json.Linq.JToken,Claunia.PropertyList.NSArray)">
            <summary>
            The base hardware parser
            </summary>
        </member>
        <member name="F:InxiFrontend.Inxi.Hardware">
            <summary>
            Hardware information
            </summary>
        </member>
        <member name="M:InxiFrontend.Inxi.#ctor">
            <summary>
            Intializes the new instance of Inxi class and parses hardware
            </summary>
        </member>
        <member name="M:InxiFrontend.Inxi.#ctor(InxiFrontend.InxiHardwareType)">
            <summary>
            Intializes the new instance of Inxi class and parses hardware
            </summary>
            <param name="HardwareTypes">Hardware types to parse</param>
        </member>
        <member name="M:InxiFrontend.Inxi.#ctor(System.String,System.String,System.String,InxiFrontend.InxiHardwareType)">
            <summary>
            Initializes the new instance of Inxi class with specified path and parses hardware
            </summary>
            <param name="InxiPath">Path to Inxi executable. It's usually /usr/bin/inxi. Ignored in Windows.</param>
            <param name="CpanelJsonXsPath">Path to CPanelJsonXS executable. It's usually /usr/bin/cpanel_json_xs. Ignored in Windows.</param>
            <param name="JsonXsPath">Path to JsonXS executable. It's usually /usr/bin/json_xs. Ignored in Windows.</param>
            <param name="HardwareTypes">Hardware types to parse</param>
        </member>
        <member name="F:InxiFrontend.HardwareInfo.HDD">
            <summary>
            List of hard drives detected
            </summary>
        </member>
        <member name="F:InxiFrontend.HardwareInfo.LogicalParts">
            <summary>
            List of logical hard drive partitions detected
            </summary>
        </member>
        <member name="F:InxiFrontend.HardwareInfo.CPU">
            <summary>
            List of processors detected
            </summary>
        </member>
        <member name="F:InxiFrontend.HardwareInfo.GPU">
            <summary>
            List of graphics cards detected
            </summary>
        </member>
        <member name="F:InxiFrontend.HardwareInfo.Sound">
            <summary>
            List of sound cards detected
            </summary>
        </member>
        <member name="F:InxiFrontend.HardwareInfo.Network">
            <summary>
            List of network cards detected
            </summary>
        </member>
        <member name="F:InxiFrontend.HardwareInfo.Battery">
            <summary>
            List of batteries detected
            </summary>
        </member>
        <member name="F:InxiFrontend.HardwareInfo.System">
            <summary>
            System information
            </summary>
        </member>
        <member name="F:InxiFrontend.HardwareInfo.Machine">
            <summary>
            Machine information
            </summary>
        </member>
        <member name="F:InxiFrontend.HardwareInfo.BIOS">
            <summary>
            BIOS information
            </summary>
        </member>
        <member name="F:InxiFrontend.HardwareInfo.RAM">
            <summary>
            RAM information
            </summary>
        </member>
        <member name="F:InxiFrontend.HardwareInfo.InxiToken">
            <summary>
            Inxi token used for hardware probe
            </summary>
        </member>
        <member name="F:InxiFrontend.HardwareInfo.SystemProfilerToken">
            <summary>
            SystemProfiler token used for hardware probe
            </summary>
        </member>
        <member name="M:InxiFrontend.HardwareInfo.#ctor(System.String,InxiFrontend.InxiHardwareType)">
            <summary>
            Initializes a new instance of hardware info
            </summary>
        </member>
        <member name="T:InxiFrontend.InxiHardwareType">
            <summary>
            Enumeration of hardware type
            </summary>
        </member>
        <member name="F:InxiFrontend.InxiHardwareType.BIOS">
            <summary>
            BIOS
            </summary>
        </member>
        <member name="F:InxiFrontend.InxiHardwareType.Graphics">
            <summary>
            Graphics card (GPU)
            </summary>
        </member>
        <member name="F:InxiFrontend.InxiHardwareType.HardDrive">
            <summary>
            Hard drive
            </summary>
        </member>
        <member name="F:InxiFrontend.InxiHardwareType.HardDriveLogical">
            <summary>
            Hard drive partitions (Windows logical partitions)
            </summary>
        </member>
        <member name="F:InxiFrontend.InxiHardwareType.Machine">
            <summary>
            Machine
            </summary>
        </member>
        <member name="F:InxiFrontend.InxiHardwareType.Network">
            <summary>
            Network
            </summary>
        </member>
        <member name="F:InxiFrontend.InxiHardwareType.PCMemory">
            <summary>
            RAM
            </summary>
        </member>
        <member name="F:InxiFrontend.InxiHardwareType.Processor">
            <summary>
            Processor (CPU)
            </summary>
        </member>
        <member name="F:InxiFrontend.InxiHardwareType.Sound">
            <summary>
            Sound (SPU)
            </summary>
        </member>
        <member name="F:InxiFrontend.InxiHardwareType.System">
            <summary>
            System
            </summary>
        </member>
        <member name="F:InxiFrontend.InxiHardwareType.Battery">
            <summary>
            Battery
            </summary>
        </member>
        <member name="M:InxiFrontend.InxiInternalUtils.IsUnix">
            <summary>
            Is the platform Unix?
            </summary>
        </member>
        <member name="M:InxiFrontend.InxiInternalUtils.IsMacOS">
            <summary>
            Is the Unix platform macOS?
            </summary>
        </member>
        <member name="E:InxiFrontend.InxiTrace.DebugDataReceived">
            <summary>
            Indicates whether the debug data is received or not. It can be used to write debug data to debugger.
            </summary>
            <param name="Message">A message</param>
        </member>
        <member name="E:InxiFrontend.InxiTrace.HardwareParsed">
            <summary>
            Event when specific hardware was parsed
            </summary>
            <param name="Hardware">Specific hardware type parsed</param>
        </member>
        <member name="M:InxiFrontend.InxiTrace.Debug(System.String)">
            <summary>
            Write a debug message
            </summary>
            <param name="Message">A message</param>
        </member>
        <member name="M:InxiFrontend.InxiTrace.Debug(System.String,System.Object[])">
            <summary>
            Write a debug message
            </summary>
            <param name="Message">A message</param>
        </member>
        <member name="M:InxiFrontend.InxiTrace.RaiseParsedEvent(InxiFrontend.InxiHardwareType)">
            <summary>
            Raises the HardwareParsed event
            </summary>
            <param name="Hardware">Parsed hardware type</param>
        </member>
        <member name="P:InxiFrontend.Battery.Name">
            <summary>
            Battery ID
            </summary>
        </member>
        <member name="P:InxiFrontend.Battery.Charge">
            <summary>
            The battery charge percentage
            </summary>
        </member>
        <member name="P:InxiFrontend.Battery.Condition">
            <summary>
            Battery condition
            </summary>
        </member>
        <member name="P:InxiFrontend.Battery.Volts">
            <summary>
            Battery voltage
            </summary>
        </member>
        <member name="P:InxiFrontend.Battery.Model">
            <summary>
            Battery model
            </summary>
        </member>
        <member name="P:InxiFrontend.Battery.Status">
            <summary>
            Battery status
            </summary>
        </member>
        <member name="M:InxiFrontend.Battery.#ctor(System.String,System.Int32,System.String,System.String,System.String,System.String)">
            <summary>
            Installs specified values parsed by Inxi to the class
            </summary>
        </member>
        <member name="P:InxiFrontend.BIOS.Name">
            <summary>
            BIOS (American Megatrends, Award, etc.)
            </summary>
        </member>
        <member name="P:InxiFrontend.BIOS.Date">
            <summary>
            BIOS Date
            </summary>
        </member>
        <member name="P:InxiFrontend.BIOS.Version">
            <summary>
            BIOS Version
            </summary>
        </member>
        <member name="M:InxiFrontend.BIOS.#ctor(System.String,System.String,System.String)">
            <summary>
            Installs specified values parsed by Inxi to the class
            </summary>
        </member>
        <member name="P:InxiFrontend.Graphics.Name">
            <summary>
            Name of graphics card
            </summary>
        </member>
        <member name="P:InxiFrontend.Graphics.Driver">
            <summary>
            Driver software used for graphics card
            </summary>
        </member>
        <member name="P:InxiFrontend.Graphics.DriverVersion">
            <summary>
            Driver version
            </summary>
        </member>
        <member name="P:InxiFrontend.Graphics.ChipID">
            <summary>
            Device chip ID
            </summary>
        </member>
        <member name="P:InxiFrontend.Graphics.BusID">
            <summary>
            Device bus ID
            </summary>
        </member>
        <member name="M:InxiFrontend.Graphics.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Installs specified values parsed by Inxi to the class
            </summary>
        </member>
        <member name="P:InxiFrontend.HardDrive.Name">
            <summary>
            The name of hard drive
            </summary>
        </member>
        <member name="P:InxiFrontend.HardDrive.ID">
            <summary>
            The udev ID of hard drive
            </summary>
        </member>
        <member name="P:InxiFrontend.HardDrive.Size">
            <summary>
            The size of the drive
            </summary>
        </member>
        <member name="P:InxiFrontend.HardDrive.Model">
            <summary>
            The model of the drive
            </summary>
        </member>
        <member name="P:InxiFrontend.HardDrive.Vendor">
            <summary>
            The make of the drive
            </summary>
        </member>
        <member name="P:InxiFrontend.HardDrive.Speed">
            <summary>
            The speed of the drive
            </summary>
        </member>
        <member name="P:InxiFrontend.HardDrive.Serial">
            <summary>
            The serial number
            </summary>
        </member>
        <member name="P:InxiFrontend.HardDrive.Partitions">
            <summary>
            List of partitions
            </summary>
        </member>
        <member name="M:InxiFrontend.HardDrive.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,InxiFrontend.Partition})">
            <summary>
            Installs specified values parsed by Inxi to the class
            </summary>
        </member>
        <member name="P:InxiFrontend.Partition.Name">
            <summary>
            The name of drive partition (usually udev ID)
            </summary>
        </member>
        <member name="P:InxiFrontend.Partition.ID">
            <summary>
            The udev ID of drive partition (compatibility)
            </summary>
        </member>
        <member name="P:InxiFrontend.Partition.FileSystem">
            <summary>
            The filesystem of partition
            </summary>
        </member>
        <member name="P:InxiFrontend.Partition.Size">
            <summary>
            The size of partition
            </summary>
        </member>
        <member name="P:InxiFrontend.Partition.Used">
            <summary>
            The used size of partition
            </summary>
        </member>
        <member name="M:InxiFrontend.Partition.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Installs specified values parsed by Inxi to the class
            </summary>
        </member>
        <member name="P:InxiFrontend.MachineInfo.Name">
            <summary>
            Machine name
            </summary>
        </member>
        <member name="P:InxiFrontend.MachineInfo.Type">
            <summary>
            Machine type
            </summary>
        </member>
        <member name="P:InxiFrontend.MachineInfo.Product">
            <summary>
            Machine product name
            </summary>
        </member>
        <member name="P:InxiFrontend.MachineInfo.System">
            <summary>
            Machine system name
            </summary>
        </member>
        <member name="P:InxiFrontend.MachineInfo.Chassis">
            <summary>
            Machine chassis
            </summary>
        </member>
        <member name="P:InxiFrontend.MachineInfo.MoboManufacturer">
            <summary>
            Motherboard manufacturer
            </summary>
        </member>
        <member name="P:InxiFrontend.MachineInfo.MoboModel">
            <summary>
            Motherboard model
            </summary>
        </member>
        <member name="M:InxiFrontend.MachineInfo.#ctor(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Installs specified values parsed by Inxi to the class
            </summary>
        </member>
        <member name="P:InxiFrontend.Network.Name">
            <summary>
            Name of network card
            </summary>
        </member>
        <member name="P:InxiFrontend.Network.Driver">
            <summary>
            Driver software used for network card
            </summary>
        </member>
        <member name="P:InxiFrontend.Network.DriverVersion">
            <summary>
            Driver version
            </summary>
        </member>
        <member name="P:InxiFrontend.Network.Duplex">
            <summary>
            Duplex type (usually full)
            </summary>
        </member>
        <member name="P:InxiFrontend.Network.Speed">
            <summary>
            Maximum speed that the device can handle
            </summary>
        </member>
        <member name="P:InxiFrontend.Network.State">
            <summary>
            State of network card
            </summary>
        </member>
        <member name="P:InxiFrontend.Network.MacAddress">
            <summary>
            MAC Address
            </summary>
        </member>
        <member name="P:InxiFrontend.Network.DeviceID">
            <summary>
            Device identifier
            </summary>
        </member>
        <member name="P:InxiFrontend.Network.ChipID">
            <summary>
            Device chip ID
            </summary>
        </member>
        <member name="P:InxiFrontend.Network.BusID">
            <summary>
            Device bus ID
            </summary>
        </member>
        <member name="M:InxiFrontend.Network.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Installs specified values parsed by Inxi to the class
            </summary>
        </member>
        <member name="P:InxiFrontend.PCMemory.Name">
            <summary>
            Memory indicators
            </summary>
        </member>
        <member name="F:InxiFrontend.PCMemory.TotalMemory">
            <summary>
            Total memory installed
            </summary>
        </member>
        <member name="F:InxiFrontend.PCMemory.UsedMemory">
            <summary>
            Used memory
            </summary>
        </member>
        <member name="F:InxiFrontend.PCMemory.FreeMemory">
            <summary>
            Free memory
            </summary>
        </member>
        <member name="M:InxiFrontend.PCMemory.#ctor(System.String,System.String,System.String)">
            <summary>
            Installs specified values parsed by Inxi to the class
            </summary>
        </member>
        <member name="P:InxiFrontend.Processor.Name">
            <summary>
            Name of processor
            </summary>
        </member>
        <member name="P:InxiFrontend.Processor.Topology">
            <summary>
            Core Topology
            </summary>
        </member>
        <member name="P:InxiFrontend.Processor.Type">
            <summary>
            Processor type
            </summary>
        </member>
        <member name="P:InxiFrontend.Processor.Milestone">
            <summary>
            Processor milestone (Kaby Lake, Coffee Lake, ...)
            </summary>
        </member>
        <member name="P:InxiFrontend.Processor.Flags">
            <summary>
            Processor features
            </summary>
        </member>
        <member name="P:InxiFrontend.Processor.Bits">
            <summary>
            Processor bits
            </summary>
        </member>
        <member name="P:InxiFrontend.Processor.L2">
            <summary>
            L2 Cache
            </summary>
        </member>
        <member name="P:InxiFrontend.Processor.L3">
            <summary>
            L3 Cache
            </summary>
        </member>
        <member name="P:InxiFrontend.Processor.CPURev">
            <summary>
            CPU Rev
            </summary>
        </member>
        <member name="P:InxiFrontend.Processor.CPUBogoMips">
            <summary>
            CPU BogoMips
            </summary>
        </member>
        <member name="P:InxiFrontend.Processor.Speed">
            <summary>
            Processor speed
            </summary>
        </member>
        <member name="M:InxiFrontend.Processor.#ctor(System.String,System.String,System.String,System.Int32,System.String,System.String[],System.String,System.Int32,System.String,System.Int32,System.String)">
            <summary>
            Installs specified values parsed by Inxi to the class
            </summary>
        </member>
        <member name="P:InxiFrontend.Sound.Name">
            <summary>
            Name of sound card
            </summary>
        </member>
        <member name="P:InxiFrontend.Sound.Vendor">
            <summary>
            The maker of sound card
            </summary>
        </member>
        <member name="P:InxiFrontend.Sound.Driver">
            <summary>
            Driver software used for sound card
            </summary>
        </member>
        <member name="P:InxiFrontend.Sound.ChipID">
            <summary>
            Device chip ID
            </summary>
        </member>
        <member name="P:InxiFrontend.Sound.BusID">
            <summary>
            Device bus ID
            </summary>
        </member>
        <member name="M:InxiFrontend.Sound.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Installs specified values parsed by Inxi to the class
            </summary>
        </member>
        <member name="P:InxiFrontend.SystemInfo.Name">
            <summary>
            System name
            </summary>
        </member>
        <member name="P:InxiFrontend.SystemInfo.Hostname">
            <summary>
            Host name
            </summary>
        </member>
        <member name="P:InxiFrontend.SystemInfo.SystemVersion">
            <summary>
            Linux kernel version or Windows NT kernel version
            </summary>
        </member>
        <member name="P:InxiFrontend.SystemInfo.SystemBits">
            <summary>
            System bits
            </summary>
        </member>
        <member name="P:InxiFrontend.SystemInfo.SystemDistro">
            <summary>
            System name
            </summary>
        </member>
        <member name="P:InxiFrontend.SystemInfo.DesktopManager">
            <summary>
            Desktop manager
            </summary>
        </member>
        <member name="P:InxiFrontend.SystemInfo.WindowManager">
            <summary>
            Window manager
            </summary>
        </member>
        <member name="P:InxiFrontend.SystemInfo.DisplayManager">
            <summary>
            Display manager
            </summary>
        </member>
        <member name="M:InxiFrontend.SystemInfo.#ctor(System.String,System.String,System.Int32,System.String,System.String,System.String,System.String)">
            <summary>
            Installs specified values parsed by Inxi to the class
            </summary>
        </member>
        <member name="P:InxiFrontend.WindowsLogicalPartition.Name">
            <summary>
            The name of drive partition
            </summary>
        </member>
        <member name="P:InxiFrontend.WindowsLogicalPartition.Letter">
            <summary>
            The drive letter of drive partition
            </summary>
        </member>
        <member name="P:InxiFrontend.WindowsLogicalPartition.FileSystem">
            <summary>
            The filesystem of partition
            </summary>
        </member>
        <member name="P:InxiFrontend.WindowsLogicalPartition.Size">
            <summary>
            The size of partition
            </summary>
        </member>
        <member name="P:InxiFrontend.WindowsLogicalPartition.Used">
            <summary>
            The used size of partition
            </summary>
        </member>
        <member name="M:InxiFrontend.WindowsLogicalPartition.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Installs specified values parsed to the class
            </summary>
        </member>
        <member name="M:InxiFrontend.BatteryParser.ParseAllToList(Newtonsoft.Json.Linq.JToken,Claunia.PropertyList.NSArray)">
            <summary>
            Parses battery info
            </summary>
            <param name="InxiToken">Inxi JSON token. Ignored in Windows.</param>
        </member>
        <member name="M:InxiFrontend.BIOSParser.Parse(Newtonsoft.Json.Linq.JToken,Claunia.PropertyList.NSArray)">
            <summary>
            Parses BIOS info
            </summary>
            <param name="InxiToken">Inxi JSON token. Ignored in Windows.</param>
        </member>
        <member name="M:InxiFrontend.GraphicsParser.ParseAll(Newtonsoft.Json.Linq.JToken,Claunia.PropertyList.NSArray)">
            <summary>
            Parses graphics cards
            </summary>
            <param name="InxiToken">Inxi JSON token. Ignored in Windows.</param>
        </member>
        <member name="M:InxiFrontend.HardDriveParser.ParseAll(Newtonsoft.Json.Linq.JToken,Claunia.PropertyList.NSArray)">
            <summary>
            Parses hard drives
            </summary>
            <param name="InxiToken">Inxi JSON token. Ignored in Windows.</param>
        </member>
        <member name="M:InxiFrontend.MachineParser.Parse(Newtonsoft.Json.Linq.JToken,Claunia.PropertyList.NSArray)">
            <summary>
            Parses machine info
            </summary>
            <param name="InxiToken">Inxi JSON token. Ignored in Windows.</param>
        </member>
        <member name="M:InxiFrontend.NetworkParser.ParseAll(Newtonsoft.Json.Linq.JToken,Claunia.PropertyList.NSArray)">
            <summary>
            Parses network cards
            </summary>
            <param name="InxiToken">Inxi JSON token. Ignored in Windows.</param>
        </member>
        <member name="M:InxiFrontend.PCMemoryParser.Parse(Newtonsoft.Json.Linq.JToken,Claunia.PropertyList.NSArray)">
            <summary>
            Parses processors
            </summary>
            <param name="InxiToken">Inxi JSON token. Ignored in Windows.</param>
        </member>
        <member name="M:InxiFrontend.ProcessorParser.ParseAll(Newtonsoft.Json.Linq.JToken,Claunia.PropertyList.NSArray)">
            <summary>
            Parses processors
            </summary>
            <param name="InxiToken">Inxi JSON token. Ignored in Windows.</param>
        </member>
        <member name="M:InxiFrontend.CPUFeatures.IsProcessorFeaturePresent(InxiFrontend.CPUFeatures.SSEnum)">
            <summary>
            [Windows] Check for specific processor feature. More info: https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-isprocessorfeaturepresent
            </summary>
            <param name="processorFeature">An SSE version</param>
            <returns>True if supported, false if not supported</returns>
        </member>
        <member name="T:InxiFrontend.CPUFeatures.SSEnum">
            <summary>
            [Windows] Collection of SSE versions
            </summary>
        </member>
        <member name="F:InxiFrontend.CPUFeatures.SSEnum.SSE">
            <summary>
            [Windows] The SSE instruction set is available.
            </summary>
        </member>
        <member name="F:InxiFrontend.CPUFeatures.SSEnum.SSE2">
            <summary>
            [Windows] The SSE2 instruction set is available. (This is used in most apps nowadays, since recent processors have this capability.)
            </summary>
        </member>
        <member name="F:InxiFrontend.CPUFeatures.SSEnum.SSE3">
            <summary>
            [Windows] The SSE3 instruction set is available.
            </summary>
        </member>
        <member name="M:InxiFrontend.SoundParser.ParseAll(Newtonsoft.Json.Linq.JToken,Claunia.PropertyList.NSArray)">
            <summary>
            Parses sound cards
            </summary>
            <param name="InxiToken">Inxi JSON token. Ignored in Windows.</param>
        </member>
        <member name="M:InxiFrontend.SystemParser.Parse(Newtonsoft.Json.Linq.JToken,Claunia.PropertyList.NSArray)">
            <summary>
            Parses system info
            </summary>
            <param name="InxiToken">Inxi JSON token. Ignored in Windows.</param>
        </member>
    </members>
</doc>
